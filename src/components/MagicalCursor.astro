---
// Magical Tinkerbell-inspired cursor component
---

<div id="magical-cursor-container">
  <!-- Main cursor wand -->
  <div id="cursor-wand" class="cursor-wand">
    <div class="wand-tip"></div>
    <div class="wand-shaft"></div>
    <div class="wand-handle"></div>
  </div>
  
  <!-- Trailing sparkles -->
  <canvas id="sparkle-canvas" class="sparkle-canvas"></canvas>
  
  <!-- Ember particles -->
  <canvas id="ember-canvas" class="ember-canvas"></canvas>
  
  <!-- Magic aura -->
  <div id="cursor-aura" class="cursor-aura"></div>
</div>

<style lang="scss">
  @use '../styles/_variables' as *;

  #magical-cursor-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    pointer-events: none;
    z-index: 10000;
    mix-blend-mode: screen;
  }

  .cursor-wand {
    position: absolute;
    width: 40px;
    height: 8px;
    pointer-events: none;
    transform-origin: 5px 4px;
    z-index: 10001;

    .wand-tip {
      position: absolute;
      right: 0;
      top: 50%;
      transform: translateY(-50%);
      width: 12px;
      height: 12px;
      background: radial-gradient(circle, 
        rgba($accent, 1) 0%, 
        rgba($primary, 0.9) 30%, 
        rgba($accent, 0.8) 60%, 
        transparent 100%);
      border-radius: 50%;
      box-shadow: 
        0 0 15px rgba($accent, 0.8),
        0 0 30px rgba($primary, 0.6),
        0 0 45px rgba($accent, 0.4),
        inset 0 0 8px rgba(255, 255, 255, 0.3);
      animation: tipGlow 2s ease-in-out infinite alternate;
      
      &::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 16px;
        height: 16px;
        background: radial-gradient(circle, 
          rgba(255, 255, 255, 0.8) 0%, 
          rgba($accent, 0.6) 40%, 
          transparent 70%);
        border-radius: 50%;
        animation: tipPulse 1.5s ease-in-out infinite;
      }
      
      &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 20px;
        height: 20px;
        background: radial-gradient(circle, 
          transparent 30%, 
          rgba($accent, 0.3) 50%, 
          transparent 70%);
        border-radius: 50%;
        animation: tipHalo 3s linear infinite;
      }
    }

    .wand-shaft {
      position: absolute;
      left: 8px;
      top: 50%;
      transform: translateY(-50%);
      width: 24px;
      height: 4px;
      background: linear-gradient(90deg, 
        rgba($text, 0.9) 0%, 
        rgba($accent, 0.7) 30%, 
        rgba($primary, 0.8) 70%, 
        rgba($text, 0.6) 100%);
      border-radius: 2px;
      box-shadow: 
        0 0 8px rgba($accent, 0.5),
        inset 0 1px 2px rgba(255, 255, 255, 0.3),
        inset 0 -1px 2px rgba(0, 0, 0, 0.3);
      
      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(90deg, 
          transparent 0%, 
          rgba(255, 255, 255, 0.4) 50%, 
          transparent 100%);
        border-radius: 2px;
        animation: shaftShimmer 2.5s ease-in-out infinite;
      }
    }

    .wand-handle {
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
      width: 12px;
      height: 8px;
      background: radial-gradient(ellipse, 
        rgba($text, 0.9) 0%, 
        rgba($accent, 0.6) 60%, 
        rgba($primary, 0.4) 100%);
      border-radius: 6px;
      box-shadow: 
        0 0 6px rgba($accent, 0.4),
        inset 0 1px 1px rgba(255, 255, 255, 0.3),
        inset 0 -1px 1px rgba(0, 0, 0, 0.3);
    }
  }

  .cursor-aura {
    position: absolute;
    width: 80px;
    height: 80px;
    pointer-events: none;
    z-index: 9999;
    
    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      height: 100%;
      background: radial-gradient(circle, 
        rgba($accent, 0.15) 0%, 
        rgba($primary, 0.1) 30%, 
        rgba($accent, 0.05) 60%, 
        transparent 100%);
      border-radius: 50%;
      animation: auraBreath 3s ease-in-out infinite;
    }
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 120%;
      height: 120%;
      background: radial-gradient(circle, 
        transparent 40%, 
        rgba($accent, 0.08) 60%, 
        transparent 80%);
      border-radius: 50%;
      animation: auraRotate 4s linear infinite;
    }
  }

  .sparkle-canvas,
  .ember-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  @keyframes tipGlow {
    0% {
      box-shadow: 
        0 0 15px rgba($accent, 0.8),
        0 0 30px rgba($primary, 0.6),
        0 0 45px rgba($accent, 0.4);
    }
    100% {
      box-shadow: 
        0 0 20px rgba($accent, 1),
        0 0 40px rgba($primary, 0.8),
        0 0 60px rgba($accent, 0.6);
    }
  }

  @keyframes tipPulse {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.2);
      opacity: 1;
    }
  }

  @keyframes tipHalo {
    0% {
      transform: translate(-50%, -50%) rotate(0deg) scale(1);
      opacity: 0.3;
    }
    50% {
      transform: translate(-50%, -50%) rotate(180deg) scale(1.1);
      opacity: 0.1;
    }
    100% {
      transform: translate(-50%, -50%) rotate(360deg) scale(1);
      opacity: 0.3;
    }
  }

  @keyframes shaftShimmer {
    0%, 100% {
      transform: translateX(-100%);
      opacity: 0;
    }
    50% {
      transform: translateX(100%);
      opacity: 1;
    }
  }

  @keyframes auraBreath {
    0%, 100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.6;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.2);
      opacity: 0.3;
    }
  }

  @keyframes auraRotate {
    0% {
      transform: translate(-50%, -50%) rotate(0deg);
    }
    100% {
      transform: translate(-50%, -50%) rotate(360deg);
    }
  }

  // Enhanced cursor interactions for specific elements
  a, button, [role="button"], input, select, textarea {
    cursor: none; // Ensure cursor is hidden on interactive elements
    
    &:focus {
      outline: 2px solid rgba($accent, 0.5);
      outline-offset: 2px;
    }
  }
</style>

<script>
  // This script will be enhanced with GSAP and Three.js
  console.log('Magical cursor component loaded');
</script>